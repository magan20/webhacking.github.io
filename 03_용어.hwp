03. 웹 애플리케이션 기술
    http: (HyperText Transfer Protocol) www 상에서 정보를 주고 받을 수 있는 프로토콜, HTML 문서를 주고 받는데 쓰임, TCP와 UDP를 사용
        ㄴ메시지 기반 모델
        ㄴ클라이언트/서버의 요청/응답 방식
    1. HTTP 프로토콜
        - 분산 애플리케이션: 비중앙집권 애플리케이션, 중앙 컨트롤의 주체가 없음
        - TCP: 전송제어 프로토콜(Transmission Control Protocol: TCP) 프로그램간의 데이터 교환을 통제하는 프로토콜, 브라우저가 서버에 연결할 때 사용, 파일 전송에도 사용
        - 비연결지향적(connectionless)

        1_1. HTTP 요청
            - Referer 헤더: 해당 요청이 이전에 어디서부터 요청을 받았는지에 대한 URL을 나타냄
            - User-Agent: 브라우저나 기타 클라이언트의 소프트웨어 정보를 보여주고 있음.
            - 모질라: 넷스케이프 팀이 중심이 되어 구성한 자유 소프트웨어 커뮤니티
            - Host 헤더: URL주소에 나타난 호스트명을 자세하게 나타내기 위해 사용/ 제일 처음 요청한 url에는 호스트 명이 없다
            - 쿠키 헤더: 서버가 클라이언트에게 전송한 인자 값에 추가 정보를 보낼 때 사용
        1_2. HTTP 응답
        1_3. HTTP 메소드
            - history api: JavaScript를 통해 브라우저 탐색 기록에 액세스 할 수 있음. 
            - SAP: 싱클 메이지 애플리케이션, history api와 다르게 주소가 봐뀌지 않음, 즉 하나의 페이지로 만들어짐
            - 로그: 인터넷 사용 흔적
        1_4. URL
            - url: uniform resource locator, 웹 자료 고유의 이름
            - uri: uniform resource identifier, url+urn
        1_5. HTTP 헤더
            - 캐시: 데이터나 값을 미리 저장해 놓는 임시 저장소
        1_6. 쿠키
            - 쿠키: 웹 애플리케이션이 웹 사이트를 방문한 사용자를 구분하기 위해 사용하는 기록 정보 파일, HTTP 프로토콜의 요소
            - 세션: 상호 작용적인 정보 교환을 전제하는 둘 이상의 통신 장치나 컴퓨터와 사용자 간의 대화나 송수신 연결상태르 의미하는 다이얼로그 or 시간대
        1_7. 상태 코드
        1_8. HTTPS
            - SSL: 디지털 인증서라고도 하는 SSL 인증서는 브라우저 또는 사용자의 컴퓨터와 서버 또는 웹사이트 간에 암호화된 연결을 수립하는데 사용
        1_9. HTTP 프록시
            - 프록시: 서버와 클라이언트 사이의 중계기로서 다른 네트워크 서비스에 간접적으로 통신을 수행하는 것
            - 프록시 서버: 클라이언트와 서버 사이에 중계기능을 하는 서버
            - 핸드셰이크: 주고받기, SSL 핸드셰이크로 많이 사용, 채널에 대한 정상적인 통신이 시작되기 전에 두 개의 실체간에 확립된 변수를 설정하는 협상 과정
        1_10. HTTP 인증
            - Base64: 64진법을 사용하는 인코딩 방법 중 하나
            - MD5 체크섬: 128비트 암호화 해쉬 함수, 무결성 검사 등에 사용
            - 인트라넷: 조직 안에서 내부적 정보 교화과 정보 공유를 위해, 인터넷을 이용하여 구축한 컴퓨터 통신망
    2. 웹 기능
        2_1. 서버 측 기능
            2_1_1. 자바 플랫폼
                - 아키텍처: 시스템 구성과 동작원리, 구성환경 등을 설계하는 설계도
                - 라이브러리: 자주 쓰일 만한 기능들을 모아 놓은 유킬(클래스)들의 모음집
                - 프레임워크: 애플리케이션의 틀과 구조를 결정할 뿐 아니라 그 위에 개발된 개발자의 코드를 제어, 구체적이며 확장 가능한 기반 코드를 가지고 있음, 설계자가 의도하는 여러 디자인 패턴의 집합으로 구성/ 라이브러리는 제료만 제공하는 느낌이라면 프레임워크는 재료와 기초 기반도 제공하는 느낌
                - 코드 리뷰: 코드를 검토해주는 과정
                - 엔진: 라이브러리의 한 종류, 특정 분야의 기능을 거의 모두 다 제공하는 라이브러리, 훨신 완성도가 높음
            2_1_2. ASP.NET
                - ASP.NET: 마이크로소프트 사의 웹 애플리케이션 프레임워크
                - API: 응용 프로그래밍 인터페이스, 응용 프로그램을 위한 인터페이스, 응용프로그램과 사용자 사이에서 기능을 제공하는 인터페이스,
                - 패러다임: 틀, 한 시대 사람들의 견해나 사고를 근본적으로 규정하고 있는 인식의 체계
            2_1_3. PHP
                - PHP(personal home page): 프로그래밍 언어의 일종으로 웹 애플리케이션을 개발하거나 서버를 만질 때 사용
                - LAMP: linux, apache, mysql, php를 일컫는 말
        2_2. 클라이언트 측 기능
            2_2_1. HTML
                - HTML: 태그를 기반으로 한 언어, 브라우저 안의 문서를 기술할 때 사용
            2_2_2. 하이퍼링크
            2_2_3. 폼
                - 폼: 브라우저를 통해 원하는 입력값을 넣을 수 있게 하는 것
            2_2_4. 자바스크립트
                -AJAX: 자바스크립트 라이브러리 중 하나, 전테 페이지를 새로 고치지 않고도 페이지의 일부만을 위한 데이터를 로드하는 기법, 클라이언트와 서버간에 XML 데이터를 주고받는 기술
            2_2_5. 씩 클라이언트 컴포넌트
                - 브라우저 플러그인: 브라우저에서
                - 씩 클라이언트 컴포넌트: 클라이언트-서버 컴퓨팅 아키텍처의 구성 요소 중 하나
        2_3. 상태와 세션
            - 토큰: 웹 애플리케이션 사용자들을 구분하기 위해 서버가 발행(?)하는 세션의 독특한 문자열
    3. 인코딩 스키마
        - 인코딩 스키마
        3_1. URL 인코딩
        3_2. 유니코드 인코딩
        3_3. HTML 인코딩
            - 메타문자: 사전에 약속 된 문자
        3_4.Base64 인코딩
            - SMTP: 간이 전자 우편 전송 프로토콜, 인터넷에서 이메일을 보내기 위해 이용되는 프로토콜
        3_4. Hex 인코딩
            -Hex: 16진법
            
            
                
                
                


