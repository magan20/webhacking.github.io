4. 애플리케이션 매핑
    -애플리케이션 지도 작성: 애플리케이션 내에서 연결되어 있는 페이지, 동작, 정보 등을 파악하는 것, 애플리케이션 내에서 숨겨져 있는 기능, 컨텐츠, 페이지가 있을 수도 있으므로 고급 기술을 사용해야 됨
    - application mapping: 소프트웨어, 서버, 스토리지, 보안, 네트워킹 인프라 밎 데이터 흐름을 포함하여 조직의 비지니스 프로세스 밎 응용 프로그램의 모든 구성 요소와 상호 종속성을 검색하고 매핑하는 데 사용 되는 프로세스
    1. 컨텐트와 기능 정렬
        1_1. 웹 스파이더링
            - 스파이더: 크롤링의 다른 용어, 조직적, 자동화된 방법으로 월드 와이드 웹을 탐색하는 컴퓨터 프로그램, 이 프로그램이 하는 작업을 스파이더링 또는 웹 크롤링이라고 함
            - 파싱: 논리 문법에대한 적합성을 테스트 하기 위해 논리 구문 구성 요소로ㅗ 문자열을 분석하는 것
            - webscarab: 보안 응용 프로그램 테스트 도구, 프록시 역할
            - zap(zed attack proxy): 오픈 소스 웹 응용 프로그램 보안 스캐너, 침투 테스트시 사용
            - 로봇 배제 표준: 웹 사이트에 봇이 접근하는 것을 방지하기 위한 규약, 일반적으로 접근 제한에 대한 설명을 robots.txt에 기술
            - web root: 문서 루트라고도 불리는 웹 우트 디렉토리는 웹 사이트에 대한 공개적으로 액세스 기본 폴더임, 웹 사이트에서 도메인을 탐색할 때 액세스 되는 폴더
            - robots.txt: 많은 웹 서버가 web root 에 포함학 ㅗ있는 파일, 스파이더와 같은 봇에 의해 열람되거나 검색 엔진에 의해 색인되는 것을 원하지 않는 url들의 리스트가 들어있다.
            - rest-style url: 쿼리 스트링이 아닌 URL 파일 경로 내에 해당 매개 변수가 포함 된 URL을 나타내는 데 사용
                ㄴEX) http://wahh-app.com/search?make=ford&model=pinto는 rest-style로 나타내면 http://wahh-app.com/search/ford/pinto
            - flash
            - applet: 플러그인의 하나로서 전
            - eis
            - 스파이더링의 한계
                ㄴ1. 동적인 페이지의 경우 내비게이션이 제대로 처리되지 못하면 애플리게이션의 한 영역 전체가 정보 수집에서 빠질 수 있다.
                ㄴ2. 잘못된 입력값으로 인해 다름 컨텐츠로 넘어가지 못할 수 있다.
                ㄴ3. 자동화된 스파이더링은 일반적으로 URL을 기반으로 컨텐츠를 확인, 한 디렉토리에서 post 방식을 이용하여 url에 변화는 없이 변수만 주고 받는다면 정보를 수집하지 않는 ㅠㅔ이지가 생길 수 있다.
                ㄴ4. url 매개변수에 타이머나 난수 값이 들어있다면 같은 url을 무한히 참조할 수 있다.
            - 스파이더를 이용해서는 인증 이후의 세션이 잘 이어지지 못하는 이유
                ㄴ1. url을 따라가면서 어떤 시점에서 스파이더는 로그아웃 기능을 요청하고 이것이 세션을 종료하게 만든다.
                ㄴ2. 만약 스파이더가 민감한 기능에 무효한 입력값을 제출하면 매플리케이션은 방어적으로 세션을 종료시킨다.
                ㄴ3. 만약 애플리케이션이 per-page 토큰을 사용하면 스파이더는 거의 확실히 스파이더 사용자가 예상한 순서를 벗어난 페이지를 요청하면서 이것을 적절히 처리하지 못할 것이다. 그리고 아마도 세션이 종료될 것이다.
            - 저작물 관리 시스템(content managememnt system): 임의의 장소에 있는 콘텐츠 파일들을 포함하여 저작물 관리에 사용하는 소프트웨어
        1_2. User-Dirented 스파이더링
            - user-directed spidering: 검사를 거치지 않는 일반 spidering과 다르게 애플리케이션 내의 페이지를 거쳐가면서 서버와 주고 받은 내용들을 프록시와 스파이더 도구가 결합된 도구를 통해 감시되고 이러한 내용을 바탕으로 애플리케이션 지도를 업데이트 함
            - user-directed spidering: 일반 스파이더링과 다르게 사용자는 표준 브라우저를 사용하여 일반적인 방식으로 응용 프로그램을 탐색하면서 모든 응용 프로그램 기능을 탐색
            Question
                - 스파이더링: 웹 사이트를 크롤링하고 검색 엔진에 대한 정보를 색인화하는 인터넷 봇
                - user-directed 스파이더링: 스파이더링보다 더 전교한 기술, 사용자는 표준 브라우저를 사용하여 일반적인 방식으로 응용 플그램을 탐색하면서 오든 응용 프로그램 기능을 탐색
                그렇다면 차이점은 이것인가?
                    - spidering: 봇 사용, user-directed spidering: 브라우저 사용
                    - spidering: 검색 엔진에 의해 색인 되는 자료만 크롤링, user-directed spidering: robot.txt에 있는 url과 같이 숨겨져 있는 자료도 크롤링
            - 프록시/스파이더 도구오 인해 생성된 사이트 맵은 대상 애플리케이션에 대해 아주 풀부한 정보를 담고 있을 것이므로, 애플리케이션 취약점을 찾는데 유용할 것임
            - jsp: 자바 서버 페이지, html 내에 자바 코드를 삽입하여 웹 서버에서 동적으로 웹 페이지를 생성하여 웹 브라우저에 돌려주는 언어, 웹 애플리케이션 서버에서 동작
        1_3. 숨겨진 컨텐츠 발견
            - 백업: 데이터가 손상되거나 손실될 경우를 대비해 저장하는데 데이터 사본, 원본 데이터는 백업을 생성한 후에도 지우지 않음, 데이터를 그대로 복사하는 것에 중점을 둠, 데이터를 복원하는 기능 
            - 아카이브: 참고용으로 생성한 데이터 사본, 아카이브를 만든 후 종종 원본 데이터를 지우기도 함, 보편족으로 이전 데이터에서 일부 데이터를 찾는 것, 시스템을 최적화하고 저장공간 절약
            - spidering를 통해 결함이 있는 기능을 이용해서 애플리케이션 내 사용자 권한을 상승시킬 수 있다.
            1_3_1. 무차별 대입 공격 기법
                - 무차별 대입 공격: 특정 암호를 풀기 위해 가능한 모든 값을 대입하여 애플리케이션의 응답을 푀대한 많이 수집, 검토
                - 방법
                    ㄴ1. 애플리케이션 컨텐츠 확인
                    ㄴ2. 자동회된 도구를 통해 숨겨진 컨텐츠나 디렉터리 확인
                    ㄴ3. 추가로 다른 페이지가 있는지 요청을 보냄
                - 애플리케이션에서 실제 처리 상태와 다르게 응답 코드를 반환하는 경우가 있음
                    ㄴ1. 401 Unauthorized or 403 Forbidden: 요청된 리소ㅡ가 존재하지만 인증 여부나 권한 여부에 관계 없이 어떤 사용자에 의해서는 접근할 수 없음을 가리킴 
                - 버프 인트루더: 파라미터 변조 자동화 공격시 사용
            1_3_2. 제시된 컨텐츠에서 추측
                - asp: active server oages, 마이크로소프트사에서 동적으로 웹 페이지를 생성하기 위해 개발한 서버 측 스크립트 엔진임