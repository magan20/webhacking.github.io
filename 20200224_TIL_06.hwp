06. 인증 무력화
    - 사용자 인증: 사용자느 id와 pw 제공, 애플리케이션은 정보 확인->개념적으로 가장 단순한 메커니즘
        ㄴ 악의적 공격에 맞서 매플리케이션을 보호하는 핵심적 조치
        ㄴ 비인가된 접속에 대한 일차 방어선
        ㄴ 강력한 인증 없이는 세션 관리나 접근 통제와 같은 핵심 보안 메커니즘도 제대로 작동할 수 없음
    1. 인증 기술
        - html 폼 기반  사용자 인증
            ㄴ 폼을 이용하여 id, pq를 애플리케이션에 보내는 방식
            ㄴ 중요한 애플리케이션은 메커니즘을 다단계로 확장해 개인 식별 번호나 암호의 특정 문자를 요구
        - 비밀번호와 OTP 발생기를 결합한 다중 요인 인증 기법
            ㄴ OTP 발생기: 전자금융 거래에서 사용되는 일회용 비밀번호 생성 기기, 애플리케이션이 제시한 입력갑으로 "challenge-response" 함수를 처리해서 일회용 비밀번호를 생성한다.
            ㄴ 피싱공격이나 클라이언트 측에 숨겨진 악성 코드를 통한 공격에는 대처하지 못함
            ㄴ 피싱공격: 전자우편 또는 메신저를 사용해서 신뢰할 수 있는 사람 또는 기업이 보낸 메시지인 것처럼 가장함으로써 기밀 정보를 얻는 공격
        - SSL 인증서와 스마트카드
            ㄴ ssl 인증서
                ㄴ 암호화키를 조직의 세부 정보에 디지털 방식으로 바인딩하는 작은 데이터 파일, 웹 서버에 설치하면 자물쇠 및 https 프로토콜이 활성화되고 웹 서버에서 브라우저로 안전하게 연결 가능
                ㄴ 인터넷을 통해 전송된 중요한 전보를 암호화하여 의도된 수신자만 액세스 할 수 있도록하기 위한 것, 유효한 클라이언트인지 확인
                ㄴ https 프로토콜에서 클라이언트와 서버간 인증을 담당
            ㄴ 스마트카드
                ㄴ 비대칭 암호연산을 위한 미니컴퓨터의 일좀
                ㄴ 한번 주입된 비밀키는 외부에서 다시 회수할 수 없으며 공개키로 암호화된 토큰을 입역하면 내장된 비밀키로 해독된 값만 돌려줌, 이론상 해킹에 완벽하게 안전
        - HTTP 기본이나 해시 인증
            ㄴ 해시 인증: 해시를 사용하여 평문을 암호화된 문장(텍스트)로 만들고, 이 암호화된 문자를 사용하여 사용자를 인증
            ㄴ 암호화(encryption): 평문을 암호화된 문장으로 만든 후 이 암호화된 문장을 다시 평문으로 만드는 복호화를 거쳐서 사용자를 인증 
        - NTLM이나 커버로스를 이용한 윈도우 통합 인증
            ㄴ NTLM: 윈도우 네트워크에서 NT LAN Manager는 사용자에게 인증, 무결성 및 기밀성을 제공하기 위한 Microsoft 보안 프로토콜 모음임, 3방향 핸드쉐이크 방식 사용
            ㄴ 커버로스: 티켓을 기반으로 동작하는 컴퓨터 네트워크 인증 암호화 프로토콜, 사용자와 서버가 서로 식별할 수 있는 상호 인증 제공
        - 사용자 인증 서비스
    2. 인증 메커니즘에서 발견되는 설계상의 결함
        2_1. 나쁜 비밀번호
            - 애플리케이션이 강력한 비밀번호를 요구하지 않으면 사용자들에게 수많은 취약한 비밀번호를 허용하게 됨
        2_2. 무차별 대입 공격이 가능한 로그인
            - DLS: 디지털 가입자 회선, 지역 전화망을 통해 디지털 데이터 전송을 제공하는 기술의 계열
            - 어떤 애플리케이션은 클라인어트 측 통제를 통해 쿠키에 pw 입력 횟수를 넣어서 로그인 시도를 제한하기도 함
        2_3. 불필요하게 상세한 로그인 실패 메시지 
            - 애플리케이션에서 id와 pw 중 어느 정보가 맞지 않는다고 알려주면 이를 이용해서 사용자 인증 세어를 약화시킬 수 있다.
            - 친절한 에러 메시지(ex.  "없는 사용자명입니다.", "pw가 틀렸습니다")를 통해 확인된 사용자명은 비밀번호 추측, 사용자 데이터나 세션, 사회 공학적 공격 등 여러 후속 공격에 사용
            - 화면상의 에러메시지가 동일하더라도 HTML코드 상의 차이가 있을 수도 있다.
            - 로그인 요청에 대한 애플리케이션 응답 속도로 유효성을 판별할 수도 있다.
        2_4. 로그인 정보의 전송 취약성
            - 암호화되지 않은 HTTP 연결을 통해 로그인 정보가 전달된다면 적당한 네트워크상의 지점에서 이를 가로챌 수 있음
            - ISP: 인터넷 서비스 제공자, 인터넷에 접속하는 수단을 제공해수는 주체, 사용자와 인터넷 사이의 중계자?
            - 네트워크 인프라: 기업 네트워크의 네트워크 연결, 통신, 운영 및 관리를 가능하게 하는 전체 네트워크의 하드웨어 및 소프트웨어 리소스, 사용자, 프로세스, 응용 프로그램, 서비스 및 외부 네트워크 인터넷 간의 통신 경로 및 서비스를 제공
            - 리다이렉팅: 
            - 클라이언트 시스템을 해킹하여 쿠키에 저장된 로그인 정보를 얻게 되면 해당 사용자의 비밀번호를 알지 못해도 로그인을 할 수 있음
            - 중간자 공격: 네트워크 통신을 조작하여 통신 내용을 도텅하거나 조작하는 공격 기법
        2_5. 비밀번호 변경 처리
            - 비밀번호 변경기능에서 취약점
                ㄴ 제시된 사용자명이 유효한지를 알리는 상세한 에러 메시지
                ㄴ "현재 사용 중인 비밀번호"를 무제한적으로 추측해 볼 수 있는 기능
                ㄴ 공격자가 사용자에게 들키지 않고 비밀번호를 알아낼 수 있게 허용하는 것
        2_6. 비밀번호 분실 처리
            - 비밀번로 분실 복구 처리에서도 로그인 기능에서 불가능 했던 사용자명 알아내기 등의 작업이 가능한 경우가 있음
        2_7. '내 정보 기억하기'의 처리  
            - 자동 로그인 기능으로 영구 쿠키를 사용하거나 영구 세션 식별자를 사용할 수 있다.
        2_8. 신분 전환 처리
            - 백도어: 일반적인 인증을 통과, 원 접속을 보장하고 plaintext에의 접근을 취근하는 등의 행동을 들킬지 않고 행하는 방법을 일컫는다. 백도어는 설치된 프로그램의 형태를 위하기도 하고, 기존 프로그램 또는 하드웨어의 변형일 수도 잇다.
        2_9. 사용자 정보의 불완전한 검증
        2_10. 고유하지 않은 사용자명 문제
            - 사용자명을 고유값으로 설정하지 않고 중복되게 설정할 수 있는 애플리케이션도 존재
            - 사용자명 중복이 안되는 애플리케이션의 계정 등록 페이지에서 애플리케이션의 반응으로 사용자명을 수집할 수 있다.
        2_11. 예측 가능한 사용자명
            - 사용자명을 애플리케이션이 생셩한다면 사용자 등록을 연달아 시도하며 패턴을 살펴본다
        2_12. 추측 가능한 초기 비밀번호
            - 인트라넷 환경에서 일괄적으로 초기 비밀번호를 설정한 후 사용자에게 비밀번호를 배포하는 경우도 있다.
        2_13. 로그인 정보 전달 과정에서의 위험성
            - 많은 애플리케이션에서 신규로 생성된 사용자 로그인 정보를 이메일이나 우편을 통해 전달하는 방식을 채택하고 있음
    3. 사용자 인증 구현상의 결함
        - 구현상의 결함은 취약한 비밀번호나 무차별 대입 공격을 허용하는 등의 설계상의 결함에 비해 상대적으로 미묘하고 잘 드러나지 않는 경향이 있다.
        3_1. 장애 우회를 내포한 로그인 메커니즘
            - 장애 우회 로직: 로직 결함 중의 하나,
            - 장애 우회 로직은 매우 복잡한 사용자 인증을 사용하는 애플리케이션에서 발생할 가능성이 높다.
        3_2. 다단계 로그인 메커니즘 결함
            - 첫단계에서 사용자 id, pw 확인 후 해당 사용자에 대한 다양한 인증 확인르 추가로 진행
            - 다단계 로그인 메커니즘은 우회는 어려울 수 있지만 구현상의 결함이 발생하기 좀 더 쉽다
            - 첫번째 인증 단계를 거친 후 두번째 인증 단계에서 첫번쨰 인증에서 사용되었던 사용자 정보를 숨겨진 폼에 저장헤 나중에 제출하는 경우가 ㅣㅇㅆ다.
                ㄴ 이런 정로를 바꿔서 로그인을 시도할 수 있다.
        3_3. 로그인 정보 보관상의 위험
            - 웹 애플리케이션에서 로그인 정보를 암호화하지 않은 채 데이터베이스에 저장하고 있는 경우가 있다.
            - db 계정은 로그인 정보에 읽기와 쓰기 등 전체 권한을 가지고 있는 경우가 많다.
    4. 안전한 사용자 인증 처리
        ㄴ 인증 메커니즘에 대한 여러 공격에 대해 가장 효과적으로 대비하는 것을 설명 
        4_1. 안전한 로그인 정보의 사용
            - 적당한 최소 수준의 비밀번호에 대한 요건을 적용(길이, 수사, 문자, 대소문자, 특수기호, 유사한 비밀번호 제한 등)
            - 사용자명 고유
        4_2. 로그인 정보의 기밀 유지
            - 모든 로그인 정보를 유출되지 않게 생성, 저장, 전송
            - 클라이언트와 서버 간의 통신을 SSL과 같이 잘 구축된 암호화 기술로 보호
            - 로그인 정보를 받은 후 https로 전환하는 방식은 피함
            - 서버로 로그인 정보를 전송할 때는 반드시 post 요청을 쓰게 한다.
            - 로그인 페이지를 리다이렉트하는 경우에라도 로그인 정보를 클라이언트로 재전송하는 것은 반드시 피함
            - 서버측 애플리케이션 컴포넌트에서 로그인 정보를 저장하는 방식은 공격자가 시스템을 완전히 장악해 애플리케이션의 데이터베이스에 접근이 가능하더라도 사용자 로그인 정보를 쉽게 알아낼 수 없게 하는 방식이어야 함.
            - '내 정보 기억하기' 기능을 클라이언트 측에 구현할 때는 비밀 정보가 아닌 것만을 저장
            - 키 로깅: 사용자가 키보드로 pc에 입력하는 내용을 몰래 가로채어 기록하는 행위
        4_3. 로그인 정보의 제대로 된 검증
            - 예상치 못한 이벤트에 예외처리를 해두어야 함.
            - 모든 인증 로직은 소스코드 검토를 통해 장애 우회 같은 로직 겁근에 악용되지 않게 이를 엄격히 관리해야 함.
            - 로직 에러: 논리 에러, 프로그램이 부정확하게 동작하게 하지만 비정상적으로 종료 또는 충돌시키지는 않느 버그, 의도치 않은 또는 바라지 않은 결과나 다른 행동을 유발
        4_4. 정보 유출 방지
            - 애플리케이션의 인증 메커니즘이 화면 메시지를 통해 인증 관련 어떤 정보라도 흘려보내지 않게 해야 함
            - 계정잠금 장치에 대한 정보를 애플리케이션에 제시해 놓으면 안된다.
        4_5. 무차별 대입 공격 차단
            - 인증을 위한 질문을 하는 페이지나 기능에는 모두 자동화된 공격을 차단할 수 있는 수단을 설치해야 한다.
            - 몇번의 로그인 시도 후 계정 임시 잠금 시간을 설정하여 미빌번호 추측 공격을 지연시킨다.
            - 사용자명을 수집하지 못하게 에러 메시지를 상세하게 설정해 놓지 말아야 함
            - 캡차를 사용해서 자동화된 공격에 대응할 수 있다.
                ㄴ HTML 소스에 캡차에 표시되는 그랒가 이미지 태그에 포함되어있는 경우도 있다.
            - 캡차: 어떤 사용자가 실제 사람인지 봇인지 구별하기 위해 사용되는 방법
        4_6. 비밀번호 변경 기능의 악용 차단
            - 비밀번호 변경 기능으 인증을 거친 세션에만 접근 가능하게 해야 함
            - 사용자면은 명시적으로든 숨겨진 폼 필드나 쿠키로 제공하면 안됨
            - 사용자명의 존재 여부를 알 수 없게 그냥 일반적인 에러 메지니 만을 입력해야 함
            - 비밀번호가 변경되면 사용자에게 별도로 알려야 함
        4_7. 계정 복구 기능 악용 차단
        4_8. 로그, 감시, 통지
            - 모든 인증 관련 이벤트를 로깅함
                ㄴ 응용 프로그램 로그: 소프트웨어에 의해 기록되는 이벤트 파일, 프로그램 오규, 정보 이벤트 및 경고가 포함되어있음. 일종의 저장 파일
                ㄴ 로그인, 로그아웃, 비밀번호 변경, 비밀번호 재설정, 계정 잠금, 계정 복구 등의 이벤트 포함
            - 비정상 이벤트는 실시간 경고와 침해 방지 기능을 통해 처리하게 한다.
            - 로그인 했던 시간, ip 주소, 도메인 등의 보안 내용을 온라인으로 알려줌
        
        정리
            - 인증기능은 애플리케이션을 보호하기 위한 핵심 보안 메커니즘으로 비인가 접근에 대한 일차 저항선임
            - 현실세계의 인증 메커니즘은 설계상의 결함이나 구현상의 결함을 안고 있다.
            - 애플리케이션에서 제공하는 모든 기능들에서(로그인 ,pw 변경, 계정 복구 등) 취약점을 발견할 수 있음
            

question
    2- 무차별 대입 공격이 가능한 로그인
        ㄴ DSL 인터넷을 써서 분당 수천 번의 로그인 시도를 하는 것이 가능하다고 했는데 어떻게 하는 것임?
    2- 로그인 정보의 전송 취약성
        ㄴ isp가 정확히 무엇인가? 사용자와 인터넷 사이의 중계자?
        ㄴ 리다이렉팅이 무엇인가?
    3-장애 우회를 내포한 로그인 메커니즘
        ㄴ 장애 우회 로직이 무엇? 뜻하지 않는 예외 발생같은 느낌인가


